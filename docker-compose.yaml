version: '3.8'

services:
  web:
    #restart: always
    build: ./web
    container_name: web
    command: python manage.py runserver 0.0.0.0:8000
    entrypoint:
      - /usr/src/app/entrypoint.sh
    volumes:
      - ./web/:/usr/src/app/
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
    depends_on:
      - redis
      - db
      - rabbitmq
      - celery_worker
      - celery_beat

  flower:
    image: mher/flower
    container_name: flower
    ports:
      - 8001:5555
    env_file:
      - ./.env.flower.dev

  celery_worker:
    #restart: always
    build: ./web
    container_name: celery_worker
    command: celery -A app worker -l INFO --concurrency 3 -E -Q DiscoveryQueue,ScannerQueue,Queue
    volumes:
      - ./web/:/usr/src/app/
    env_file:
      - ./.env.dev
    depends_on:
      - redis
      - db
      - rabbitmq

  celery_beat:
    #restart: always
    build: ./web
    container_name: celery_beat
    command: celery -A app beat -l INFO -S django
    volumes:
      - ./web/:/usr/src/app/
    env_file:
      - ./.env.dev
    depends_on:
      - redis
      - db
      - rabbitmq

  db:
    image: postgres
    container_name: db
    volumes:
      - ./database:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    env_file:
      - ./.env.db.dev

  redis:
    restart: always
    image: redis
    container_name: redis
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 8002:15672
